{
  "https://studio.code.org/s/coursef-2021/lessons/1/levels/1": {
    "display_name": "This is Sprite Lab"
  },
  "https://studio.code.org/s/coursef-2021/lessons/1/levels/2": {
    "dsls": {
      "description": "Welcome to CS Fundamentals! These projects were all created with Sprite Lab. Try them out now to see what is possible. By the end of this course, you will be able to make your own projects like these... and more!",
      "display_name": "Sprite Lab Apps",
      "teacher_markdown": "# Choice Level Overview\nChoice levels provide a menu of additional levels for students to complete. Students must complete at least one of the sub-levels here, but may work through as many as they (or you) like.\n\nThe choices here take students to sample apps that they can explore. This activity is intended to coordinate with the Exploring Apps worksheet, found in the [lesson plan](.././).\n"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/2/levels/1": {
    "short_instructions": "Make a prediction!",
    "long_instructions": "Make a prediction! Study the code.\n\n-   Both planes will move one space along the grid.\n-   Both planes will start moving and not stop.\n-   One plane will move first, and the other plane will move second.\n-   The planes will crash.",
    "behavior_names": {
      "moving east": "moving east",
      "moving west": "moving west",
      "mystery behavior": "mystery behavior",
      "wandering": "wandering",
      "running east": "running east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "patrolling": "patrolling"
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "Both planes will move one space along the grid, then stop.",
              "correct": false,
              "feedback": "Incorrect. These sprites have \"behaviors\" which keep running until they are told to stop."
            },
            {
              "text": "Both planes will start moving and not stop.",
              "correct": true,
              "feedback": "Correct! These behaviors tell the planes to start moving and keep going."
            },
            {
              "text": "One plane will move first, and the other plane will move later.",
              "correct": false,
              "feedback": "Incorrect. Each block of code in Sprite Lab runs instantly after the next."
            },
            {
              "text": "The planes will crash.",
              "correct": false,
              "feedback": "Incorrect. The planes are not positioned in a way that will make them touch."
            }
          ],
          "questions": [
            {
              "text": "Read the code, then make a prediction."
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursef-2021/lessons/2/levels/2": {
    "display_name": "How to Make a Sprite"
  },
  "https://studio.code.org/s/coursef-2021/lessons/2/levels/3": {
    "display_name": "Making Sprites",
    "bubble_choice_description": "Practice making sprites.\r\n",
    "short_instructions": "Make a sprite.",
    "long_instructions": "# Making Sprites\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nTo make a sprite, open the **Sprites** category of the toolbox and drag out this block:\n\n[blockly block][1]\n\n## Do This\n\n-   Connect a `make new sprite` block under the `when run` block.\n-   Choose a costume for your sprite.\n-   Press the \"Run\" button when your code is finished.",
    "callouts": {
      "sprites_category": "Click here to open the Sprites category."
    },
    "behavior_names": {
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/2/levels/4": {
    "display_name": "Positioning Sprites",
    "bubble_choice_description": "Practice making sprites and choosing their locations.",
    "short_instructions": "Choose a new position for your sprite on the screen.",
    "long_instructions": "# Positioning Sprites\n\nEach sprite has a **location**. You can set the location by clicking the pin on this block: [blockly block][0]\n\n## Do This\n\n<div style=\"float:right\">\n\n[expandable][1]\n\n</div>\n\n-   Find the new block in the **Locations** category of the toolbox and drag it into your workspace.\n-   Connect it to the `make new sprite` block you added before.\n-   Click the pin [][2] on the location block then choose a new position for your sprite on the screen.\n-   Press Run when you are finished with your code.",
    "callouts": {
      "locations_category": "Click here to open the Locations category."
    },
    "behavior_names": {
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/2/levels/5": {
    "display_name": "Positioning Sprites",
    "bubble_choice_description": "Practice making sprites and choosing their locations.",
    "short_instructions": "Make four sprites.",
    "long_instructions": "# More Sprites\n\nNow, let's add even more sprites to this program.\n\n## Do This\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\n-   Click the image to the right to expand it.\n-   Make four sprites. Choose any costumes you like.\n-   Position each one in a different corner of the screen like the image.",
    "behavior_names": {
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/2/levels/6": {
    "display_name": "Sprite Properties",
    "bubble_choice_description": "Learn to change the size of sprites.",
    "short_instructions": "Use the new block in the Sprites category to change the size of the second sprite.",
    "long_instructions": "# Sprite Properties\n\nSprites have more properties, including a **size** that can be set with code. Here are two sprites, but one is larger than the other. Use the new block in the **Sprites** category to change the size of the second sprite.\n\n## Do This\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\n-   Use a `set size` block to resize the second sprite. You can make it bigger or smaller.\n\n_Hint:_ The default sprite size is 100, so choose any other number.",
    "callouts": {
      "sprites_category2": "Look for a new block here."
    },
    "behavior_names": {
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/2/levels/7": {
    "display_name": "Sprite Behaviors",
    "bubble_choice_description": "Give a sprite a behavior.",
    "short_instructions": "Give a sprite a behavior.",
    "long_instructions": "# Behaviors\n\nSprites can have their own behaviors, which are actions they will do over and over while the program runs. To give a sprite a behavior, you need to use a `sprite begins` block with a behavior block. \n\n## Do This\n\n<div style=\"float:right\">\n\n[expandable][0][expandable][1][expandable][2]\n\n</div>\n\n-   Drag out a `sprite begins` block from the **Behaviors** toolbox category.\n\n-   Drag out a green behavior block. Connect the blocks in your workspace.\n\n-   Press \"Run\" to see what happens.\n\n-   Explore different behaviors to see what they do.\n\n-   _Challenge:_ Have your sprite begin two different behaviors at the same time.",
    "callouts": {
      "behaviors_category": "Click here to open the Behaviors category."
    },
    "behavior_names": {
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving north": "moving north",
      "moving west": "moving west"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/2/levels/8": {
    "dsls": {
      "description": "Great work so far! Choose your next activity. Complete as many as you can. Keep practicing with sprites and behaviors!",
      "display_name": "Sprites Practice",
      "teacher_markdown": "# Choice Level Overview\nChoice levels provide a menu of additional levels for students to complete. Students must complete at least one of the sub-levels here, but may work through as many as they (or you) like.\n\nYou can use the descriptions below to help students self-select choices, or to set expectations around how many sub-levels they should complete.\n\n|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |Desert Scene|Resize the fruit.|Animate a Sailing Ship|A Breezy Day|\n|-|-|-|-|-|\n| ***Type*** |**Review**|**Review**|**Review**|**Review**|\n| ***Concept***|*sprites, locations*|*sprites, properties*|*sprites, locations, behaviors*|*behaviors*|\n\n\n"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/2/levels/9": {
    "dsls": {
      "description": "It's your turn to create whatever you want! What kind of project will you make?",
      "display_name": "Sprites - Free Play"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/3/levels/1": {
    "short_instructions": "Make a prediction!",
    "long_instructions": "Make a prediction! Study the code.\n\n-   The sprite will just spin right.\n-   The sprite will just move east.\n-   The sprite will spin and move at the same time.\n-   The sprite will spin first and then move later.",
    "callouts": {
      "behaviors_edit": "Click here to see how this behavior works."
    },
    "behavior_names": {
      "mystery behavior": "mystery behavior",
      "wandering": "wandering",
      "running east": "running east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling",
      "moving east": "moving east"
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The sprite will just spin right.",
              "correct": false,
              "feedback": "Incorrect. The sprite will also move east."
            },
            {
              "text": "The sprite will just move east.",
              "correct": false,
              "feedback": "Incorrect. The sprite has not stopped spinning, so it will do both simultaneously."
            },
            {
              "text": "The sprite will spin and move at the same time.",
              "correct": true,
              "feedback": "Correct! Both behaviors will happen simultaneously."
            },
            {
              "text": "The sprite will spin first and then move later.",
              "correct": false,
              "feedback": "Incorrect. In Sprite Lab, connected blocks happen immediately after each the last one, so both behaviors will happen simultaneously."
            }
          ],
          "questions": [
            {
              "text": "Read the code, then make a prediction."
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursef-2021/lessons/3/levels/2": {
    "display_name": "How to Make a Sprite"
  },
  "https://studio.code.org/s/coursef-2021/lessons/3/levels/3": {
    "short_instructions": "Make a sprite, then change its size and give it a behavior.",
    "long_instructions": "# Quick Review\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nIn this lesson, we'll be doing more with sprites and behaviors. First, let's practice what you learned in the last lesson.\n\n## Do This\n\n-   Make a sprite.\n-   Set the sprite's size.\n-   Begin any behavior.",
    "behavior_names": {
      "patrolling": "patrolling",
      "wobbling": "wobbling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/3/levels/4": {
    "display_name": "Time Events",
    "bubble_choice_description": "Make the sprite begin a new behavior after some time has passed.",
    "short_instructions": "Make the sprite begin a second behavior after some time has passed.",
    "long_instructions": "# Time Events\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nEvents make it easy to change what happens over time as your program runs. Use an [blockly block][1] event to make the sprite begin a new behavior after some time has passed.\n\n## Do This\n\n-   Add an `at 3 seconds` event block to your workspace.\n-   Connect a `sprite begins` block under this event.\n\nThe sprite should begin a second behavior after some time has passed.",
    "callouts": {
      "events_category": "Click here to open the Events category."
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "wobbling": "wobbling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/3/levels/5": {
    "display_name": "Time Events",
    "bubble_choice_description": "Make the sprite begin a new behavior after some time has passed.",
    "short_instructions": "Make the sprite's size, position, or rotation change when the user presses a key. ",
    "long_instructions": "# Key Events\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nEvents make it possible to create programs that are interactive. Use the [blockly block][1] event block to change the sprite's _size_, _position_, or _rotation_ when the user presses a key. \n\n## Do This\n\n-   Add a `when key pressed` **event** block to your workspace.\n-   Connect a `change` block under this event.\n-   Press the arrow keys on your screen or keyboard after pressing Run.",
    "authored_hints": {
      "changePropBlock": "You will also need this block:\n\n[blockly block][0]"
    },
    "callouts": {
      "whenKey": "Use the new event block found here."
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "wobbling": "wobbling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/3/levels/6": {
    "display_name": "Time Events",
    "bubble_choice_description": "Make the sprite begin a new behavior after some time has passed.",
    "short_instructions": "Make the sprite move one way, then another way.",
    "long_instructions": "# Switching Behaviors\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nIf you want to switch from one behavior to another, you need to _stop_ the old behavior and _begin_ the new behavior  at the same time. You can use a new block to make sprites stop their current behaviors.\n\n[blockly block][1]\n\nYou'll need to connect a behavior to this block, such as `moving east`.\n\n## Do This\n\n-   Run the code and see what happens.\n-   Add behaviors to each `stops` and `begins` block to make the sprite change from moving east to moving west at 2 seconds.",
    "behavior_names": {
      "moving east": "moving east",
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/3/levels/7": {
    "display_name": "Time Events",
    "bubble_choice_description": "Make the sprite begin a new behavior after some time has passed.",
    "short_instructions": "Make the sprite spin one way, then another way.",
    "long_instructions": "# Opposite Behaviors\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nSome behaviors do opposite things, like `moving east`/`moving west`, `growing`/`shrinking`, or `spinning right`/`spinning left`. If a sprite has two opposite behaviors it might seem like the sprite isn't do anything at all. \n\n## Do This\n\n-   Run the code and see what happens at 3 seconds.\n-   Add an `sprite stops` block under the event.\n-   Use this block to stop the old behavior.\n\n_The sprite should now spin one way, then another way._",
    "callouts": {
      "stops_block": "New blocks here!"
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/3/levels/8": {
    "dsls": {
      "description": "Great work so far! Choose your next activity. Complete as many as you can. Keep practicing with events!",
      "display_name": "Events Practice",
      "teacher_markdown": "# Choice Level Overview\nChoice levels provide a menu of additional levels for students to complete. Students must complete at least one of the sub-levels here, but may work through as many as they (or you) like.\n\nYou can use the descriptions below to help students self-select choices, or to set expectations around how many sub-levels they should complete.\n\n|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |Blast Off!|Learning to fly|Do a barrel roll|Shrink and Grow|Puff up the fish!|Penguin on the move|\n|-|-|-|-|-|-|-|\n| ***Type*** |**Review**|**Debug**|**Debug**|**Debug**|**Optional Content**|**Optional Content**\n| ***Concept***|*events, behaviors*|*events, behaviors*|*events, behaviors*|*events, behaviors*|*when/while events*|*when/while events*|\n\n\n"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/3/levels/9": {
    "dsls": {
      "description": "Now you can used what you've learned to make your project even better! Keep adding to your program or start something new!",
      "display_name": "Events - Free Play"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/4/levels/1": {
    "short_instructions": "Run the code and play with the pet! When you are done, click **Finish**.",
    "long_instructions": "# Virtual Pet\n\nWhoa! Check out this cool pet! \n\n## Do This:\n\n-   Play with the virtual pet program.\n-   Read the code to see how it works. You can even make changes!\n-   What happens when the pet touches the other sprites?\n-   What happens when you click the pet?\n\nRun the code and play with the pet! When you are done, click **Finish**.",
    "behavior_names": {
      "patrolling": "patrolling",
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "moving with arrow keys": "moving with arrow keys",
      "driving with arrow keys": "driving with arrow keys",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/4/levels/2": {
    "short_instructions": "Now it's your turn to create your own virtual pet! Let's start by making sprites for your PET and its FOOD.",
    "long_instructions": "_Now it's your turn to create your own virtual pet! Let's start by making sprites for your PET and its FOOD._\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\n## Do This\n\n1.  (Optional) Click the **Costumes** tab to add new costumes to your project.\n2.  Make two sprites with different costumes.\n3.  Choose different locations for your sprites.\n4.  Change the size of your sprites with a `set size` block.",
    "teacher_markdown": "This lesson contains a **mini-project**. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "callouts": {
      "vp_costumes": "Click here to add new costumes to your project!"
    },
    "behavior_names": {
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/4/levels/3": {
    "short_instructions": "Next let's make it so the user can move the food to your pet with the \"being draggable\" behavior.",
    "long_instructions": "_Next let's make it so the user can move the food to your pet with the \"being draggable\" behavior:_ \n[blockly block][0]\n\n<div style=\"float:right\">\n\n[expandable][1]\n\n</div>\n\n## Do This\n\n1.  Add a `sprite begins` block to your code. Select your food sprite's costume.\n2.  Find the \"being draggable\" behavior and add it to your code.\n3.  Press \"Run\". \n\n_You should now be able to move the food sprite around on the screen by clicking or tapping it._",
    "teacher_markdown": "This lesson contains a **mini-project** called _Virtual Pet_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "behavior_names": {
      "wandering": "wandering",
      "wandering2": "wandering2",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "moving east2": "moving east2",
      "shrinking": "shrinking",
      "spinning left2": "spinning left2",
      "growing": "growing",
      "spinning right2": "spinning right2",
      "moving south": "moving south",
      "shrinking2": "shrinking2",
      "swimming left and right": "swimming left and right",
      "growing2": "growing2",
      "moving south2": "moving south2",
      "swimming left and right2": "swimming left and right2",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "moving north2": "moving north2",
      "patrolling": "patrolling",
      "jittering2": "jittering2",
      "moving west2": "moving west2",
      "patrolling2": "patrolling2"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/4/levels/4": {
    "short_instructions": "Now, let's use a new \"when touching\" event block to make your pet grow when it eats!",
    "long_instructions": "_Now, let's use a new \"when touching\" event block to make your pet grow when it eats!_\n[blockly block][0]\n\n<div style=\"float:right\">\n\n[expandable][1]\n\n</div>\n\n## Do This\n\n1.  Drag out a `when touches` event block. Select your two sprites.\n2.  Use a `change size` block below this event to make your pet grow.\n\n**Optional Challenge:**\n\n-   Play a sound when your pet eats its food.",
    "teacher_markdown": "This lesson contains a **mini-project** called _Virtual Pet_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right."
  },
  "https://studio.code.org/s/coursef-2021/lessons/4/levels/5": {
    "short_instructions": "Next let's add another \"draggable\" sprite for your pet to play with. This could be a toy or even a friend.",
    "long_instructions": "_Next let's add another \"draggable\" sprite for your pet to play with. This could be a toy or even a friend._\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\n## Do This:\n\n1.  Make another new sprite.\n2.  Choose a costume to represent your pet's toy or friend.\n3.  (Optional) Change the size of your new sprite.\n4.  Give the new sprite the \"being draggable\" behavior.",
    "teacher_markdown": "This lesson contains a **mini-project** called _Virtual Pet_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right.",
    "callouts": {
      "vp_costumes": "Click here to add new costumes to your project!"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/4/levels/6": {
    "short_instructions": "Give your pet a behavior when the new sprite touches it.",
    "long_instructions": "_Now, let's show your pet's excitement by giving it a behavior when the new sprite touches it._\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\n## Do This:\n\n1.  Add another `when touches` block to your code. Select your pet and its toy or friend.\n2.  Use a `sprite begins` block to give your pet a new behavior _when the new sprite touches it._\n\n**Optional Challenge:**\n\n-   Play a sound to show your pet's excitment.",
    "teacher_markdown": "This lesson contains a **mini-project** called _Virtual Pet_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right."
  },
  "https://studio.code.org/s/coursef-2021/lessons/4/levels/7": {
    "short_instructions": "Great job! What else can you add to your program? Try anything you like!",
    "long_instructions": "_Great job! What else can you add to your program? Try anything you like!_\n\nTry these ideas:\n\n-   Add another sprite that interacts with your pet in a different way.\n-   Use a `when pet clicked` block to make your pet _stop_ any behaviors.\n-   Experiment with different behaviors. Combine behaviors that make the sprite _move_ with behaviors like \"fluttering\", \"jittering\", and \"wobbling\" to make things more lifelike.",
    "teacher_markdown": "This lesson contains a **mini-project** called _Virtual Pet_. This progression may feel very different from what has come earlier in the course for you as well as your students. These levels have some new characteristics you may want to explore before starting. \n\n-   The code your students write in one level will automatically transfer over to the other levels. This allows them to build gradually and iterate on their ideas as they learn.\n-   These levels allow for more open-ended creativity. Empower your students to determine for themselves when they have completed each task. There is no one right answer! \n-   Example solutions are available for this step of the progression which can be viewed by opening the teacher panel to the right."
  },
  "https://studio.code.org/s/coursef-2021/lessons/5/levels/1": {
    "dsls": {
      "markdown": "# The Power of Words\n\n## What should you do when someone uses mean or hurtful language on the internet?\n"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/6/levels/1": {
    "dsls": {
      "markdown": "# Blank Space Stories\n\nIn this lesson, you'll learn to use and write blank space stories. Watch this video to learn how this connects to computer science.\n"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/7/levels/1": {
    "short_instructions": "Make a prediction!",
    "long_instructions": "Make a prediction! Study the code.",
    "callouts": {
      "variablesPredict": "Look closely at the code below this point."
    },
    "placeholder_texts": {
      "f6429fe0f1a76611670df7e1234af936": "What is your name?"
    },
    "behavior_names": {
      "moving east": "moving east",
      "moving west": "moving west",
      "mystery behavior": "mystery behavior",
      "wandering": "wandering",
      "running east": "running east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "patrolling": "patrolling"
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The program will print \"Hello name!\"",
              "correct": false,
              "feedback": "Incorrect. The name block will be replaced with whatever you type in."
            },
            {
              "text": "The program will greet you with the name you type in.",
              "correct": true,
              "feedback": "Correct! What you type is used in place of the name block."
            },
            {
              "text": "The sprite will change sizes.",
              "correct": false,
              "feedback": "Incorrect. Text is printed to the screen."
            },
            {
              "text": "The computer will ask another question.",
              "correct": false,
              "feedback": "Incorrect. Only one question is asked, right when the program begins."
            }
          ],
          "questions": [
            {
              "text": "This program lets you answer a question by typing with your keyboard. The `print` block shows text on the screen. Make a prediction: What will happen after answering the question?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursef-2021/lessons/7/levels/2": {
    "display_name": "How to Make a Sprite"
  },
  "https://studio.code.org/s/coursef-2021/lessons/7/levels/3": {
    "display_name": "Time Events",
    "bubble_choice_description": "Make the sprite begin a new behavior after some time has passed.",
    "short_instructions": "Make two sprites with different locations.",
    "long_instructions": "# Quick Review\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nIn this lesson, we'll be learning a lot about adding text to your project. Before that, let's practice something you've already learned.\n\n## Do This\n\n-   Make two sprites with different costumes.\n-   Give each sprite a different location.",
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/7/levels/4": {
    "display_name": "Time Events",
    "bubble_choice_description": "Make the sprite begin a new behavior after some time has passed.",
    "short_instructions": "Use the \"print\" block to make text appear on the screen.",
    "long_instructions": "# Printing Text\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nTo make text appear on the screen you can use the print block: [blockly block][1]\n\n## Do This\n\n-   Find the `print` block in the **World** category and add it to your program.\n-   Type a message into the right side of the block to make that text appear above your sprites.\n\n_You might print text for lots of reasons:_\n\n-   _To make characters talk._\n-   _To describe a scene._\n-   _To give instructions for a game._",
    "callouts": {
      "print_block": "Find the print block here!",
      "text_print_finish": "Did your message print above? If so, hit 'Finish'. If not, hit 'Reset', change your code, and hit 'Run' again."
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/7/levels/5": {
    "short_instructions": "Use events to make more text appear on the screen over time.",
    "long_instructions": "# Using Text with Events\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nTo make more text appear on the screen over time, you'll need to use events.\n\n## Do This\n\n-   Choose any block from the **Events** category and add it to your program.\n-   Connect a new `print` block under the event.\n-   Run your program and make the second message appear after the first.\n\n_Changing text over time makes your project more engaging:_\n\n-   _Characters can have a conversation._\n-   _You can tell a story._",
    "callouts": {
      "events_category": "Click here to open the Events category."
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/7/levels/6": {
    "short_instructions": "Add a prompt to the screen.",
    "long_instructions": "# Prompts (Part 1)\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nIt's time to start learning how to use **prompts**. Prompts make it possible to get words and other text from the user and use them later in your program. The text the user types into the prompt is stored in a **variable**.\n\n[blockly block][1]\n\n## Do This\n\n-   Find the `prompt user` block in the **World** category and add it to your program.\n-   In the top part of the block, type in a question you'd like to ask.\n-   Change `???` to the label you want to use by clicking \"**Rename this variable**.\"\n-   Press \"Run\", then answer the prompt by typing something in.\n\n_Nothing else will happen yet, but that's okay!_",
    "callouts": {
      "prompt_block": "Find the prompt block here!"
    },
    "placeholder_texts": {
      "f6429fe0f1a76611670df7e1234af936": "What is your name?",
      "e243ac4e74cc5a76adbecf3b4daa1906": "my question"
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/7/levels/7": {
    "short_instructions": "Use the \"when answered\" block to print the text from the variable after the prompt is answered.",
    "long_instructions": "# Prompts (Part 2)\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nTo use the information stored in the variable, we first need to wait for the user to answer. You now have a new event block that is trigged as soon as a prompt is answered:\n\n[blockly block][1]\n\n## Do This\n\n-   Drag the new `when answered` block into your program. Make sure the variable name matches the one in your prompt!\n-   Connect a `print` block under this new event. \n-   Make sure all the variable labels match!\n-   Press \"Run\", then type something into the prompt.\n\n_Whatever message you type should be printed to the top of the screen._",
    "callouts": {
      "answered_block": "Look for a new block here!"
    },
    "placeholder_texts": {
      "e243ac4e74cc5a76adbecf3b4daa1906": "my question"
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/7/levels/8": {
    "short_instructions": "Combine the text stored in variables with other text.",
    "long_instructions": "# Prompts (Part 3)\n\n<div style=\"float:right\">\n\n[expandable][0]\n\n</div>\n\nNow let's get a little fancier. You can combine the text stored in variables with other text:\n\n[blockly block][1]\n\n## Do This\n\n-   Look through the new blocks in the **World** category.\n-   Use these blocks with your `print` block so that it combines other text with the text from the variable.\n-   You might want to change the question you are asking or the label of your variable.\n\n_This level is challenging! Click the lightbulb to the left if you would like to see an example._",
    "authored_hints": {
      "prompt_example": "[blockly block][0]"
    },
    "placeholder_texts": {
      "f6429fe0f1a76611670df7e1234af936": "What is your name?",
      "e243ac4e74cc5a76adbecf3b4daa1906": "my question"
    },
    "callouts": {
      "join_blocks": "Look for new blocks here!"
    },
    "behavior_names": {
      "patrolling": "patrolling",
      "moving forward": "moving forward",
      "growing": "growing",
      "moving west": "moving west",
      "spinning right": "spinning right",
      "moving east": "moving east",
      "moving north": "moving north",
      "moving south": "moving south",
      "jittering": "jittering",
      "wandering": "wandering",
      "shrinking": "shrinking",
      "spinning left": "spinning left",
      "fluttering": "fluttering",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/7/levels/9": {
    "dsls": {
      "description": "Great work so far! Choose your next activity. Complete as many as you can. Keep practicing with text and prompts!",
      "display_name": "Text and Prompts Practice",
      "teacher_markdown": "# Choice Level Overview\nChoice levels provide a menu of additional levels for students to complete. Students must complete at least one of the sub-levels here, but may work through as many as they (or you) like.\n\nYou can use the descriptions below to help students self-select choices, or to set expectations around how many sub-levels they should complete.\n\n|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |Using Speech for Text|Text from Prompts|Name the robot!|Variable Labels|Big Text|Prompting for colors|Starting from scratch|\n|-|-|-|-|-|-|-|-|\n| ***Type*** |**Review**|**Debug**|**Debug**|**Debug**|**Optional Content**|**Optional Content**|**Free Play**\n| ***Concept***|*print block, events*|*prompts, events*|*adding spaces*|*matching variable labels*|*title screen blocks*|*storing colors*|*no new content*\n\n\n"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/8/levels/1": {
    "short_instructions": "Make a prediction!",
    "long_instructions": "Make a prediction! Study the code.",
    "callouts": {
      "variablesPredict": "Look closely at the code below this point."
    },
    "placeholder_texts": {
      "f15045cb7e57652546d4a0b2c695356f": "What will you be eating?",
      "937dc37c06cc5d89a7096eb048b73590": " coming right up!"
    },
    "behavior_names": {
      "moving east": "moving east",
      "moving west": "moving west",
      "mystery behavior": "mystery behavior",
      "wandering": "wandering",
      "running east": "running east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "patrolling": "patrolling"
    },
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "\"One pizza coming right up!\"",
              "correct": false,
              "feedback": "Incorrect. The variable labels do not match."
            },
            {
              "text": "\"One meal coming right up!\"",
              "correct": false,
              "feedback": "Incorrect. The label of a variable is never printed."
            },
            {
              "text": "\"One food coming right up!\"",
              "correct": false,
              "feedback": "Incorrect. The label of a variable is never printed."
            },
            {
              "text": "\"One  coming right up!\"",
              "correct": true,
              "feedback": "Correct! The variable labels do not match."
            },
            {
              "text": "Nothing will get printed.",
              "correct": false,
              "feedback": "Incorrect. The event and the print block will still work."
            }
          ],
          "questions": [
            {
              "text": "This code might look familiar but read it carefully. What will be printed if the user types in \"pizza\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursef-2021/lessons/8/levels/2": {
    "dsls": {
      "description": "You will be creating either a greeting card, a chatbot, or a blank space story. Before you start, explore the example projects below to see what you are interested in creating. Press \\\"Finish\\\" when you are ready to start planning your own program.",
      "display_name": "Exploration - Sample Programs",
      "teacher_markdown": "# Choice Level Overview\nChoice levels provide a menu of additional levels for students to complete. Students must complete at least one of the sub-levels here, but may work through as many as they (or you) like.\n\nStudents should look at these projects carefully before deciding what they want to create. You can look at them together as a class or have students explore on their own.\n"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/8/levels/3": {
    "dsls": {
      "content1": "description here",
      "markdown": "# Stop!\n\n## Are you sure you're ready to move on? \n\n\nIn the next level, you will begin writing the code for your project. This works best if you already have a plan.\n\nYour completed plan should include:\n\n<img src=\"https://images.code.org/b476ac330f2b66e44e02208fee386a56-image-1614802439867.png\" style=\"float:left; height:70px; padding:10px\"/>\n\n* The type of project you're building. For example, a greeting card, chatbot, or blank space story.\n* A list of questions you will ask the user.\n* The other text you will display to the screen.\n* A description or drawing of the sprites you will need (and their behaviors).\n\nIf you are not sure if you are ready to move on, check with your teacher!\n"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/8/levels/4": {
    "dsls": {
      "description": "You will be creating either a greeting card, a chatbot, or a blank space story. If you have already finished \\\"Part 1\\\" of your project, go on to \\\"Part 2\\\".",
      "display_name": "Choose a Project",
      "teacher_markdown": "# Choice Level Overview\nChoice levels provide a menu of additional levels for students to complete. Students must complete at least one of the sub-levels here, but should be encouraged to complete **two** levels for the same project.\n\nStudents may need really clear instructions to understand how to navigate the choices here. For each of the project choices, there are two sub-levels here. To begin, students should pick one of the levels marked \"Part 1\". Once they finish that level they should return here and select \"Part 2\" of the *same* project. The first level for each choice will provide students with feedback as they put the basic components of their project together. The second level is a \"free play\" which is intended to allow students to make any changes to their code that they like.\n"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/9/levels/2": {
    "short_instructions": "Play with the blocks in the toolbox to see what they do!",
    "long_instructions": "_\"Hi, I'm an artist. You can write code to make me draw almost anything.\"_\n\nPlay with the blocks in the toolbox to see what they do!"
  },
  "https://studio.code.org/s/coursef-2021/lessons/9/levels/3": {
    "short_instructions": "Drag blocks onto the screen to have the artist draw over the grey lines in the picture. (Each line is 100 pixels long)",
    "long_instructions": "_\"Let's make a cage for my pet monster!\"_\n\nDrag blocks onto the screen to have the artist draw over the grey lines in the picture.\\\n(Each line is 100 pixels long)",
    "authored_hints": {
      "courseC_artist_prog2_a": "_\"If you use the [blockly block][0] block, I will draw a line.\"_",
      "courseC_artist_prog2_b": "Having trouble turning the corner? Use the [blockly block][0] block."
    },
    "callouts": {
      "slider": "You can slow your program down here."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/9/levels/5": {
    "short_instructions": "Each side of the inner square is 100 pixels and all of the angles are 90 degrees.",
    "long_instructions": "_\"This spaceship needs a window!\"_\n\nEach side of the inner square is 100 pixels and all of the angles are 90 degrees.",
    "authored_hints": {
      "courseC_artist_prog3_a": "To create this window, just draw a square with 100 pixel sides.\n\n-   move forward\n-   turn\n-   move forward\n-   turn\n-   move forward\n-   turn\n-   move forward",
      "courseC_artist_prog3_b": "Want to make shorter code? Try using a loop in this puzzle."
    },
    "function_definitions": {
      "draw flame": {
        "name": "draw flame",
        "parameters": {
          "x": "x"
        }
      },
      "draw fire": {
        "name": "draw fire"
      }
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/9/levels/6": {
    "short_instructions": "Finish Starla's rocket so she can chase her pet.",
    "long_instructions": "_\"Oh no!  Starla's pet alien just flew away! Let's help the spacewoman!\"_\n\nFinish Starla's rocket so she can chase her pet.\\\n(Each side of the triangle is 100 pixels long and has 120 degree outer angles.)",
    "authored_hints": {
      "courseC_artist_prog4_a": "To finish the rocket, just draw the triangle on top!",
      "courseC_artist_prog4_b": "You can use the drop down menu on the `turn` blocks to see which angle you need!",
      "courseC_artist_prog4_c": "To draw a triangle, you will want to:\n\n-   move forward\n-   turn left 120 degrees\n-   move forward\n-   turn left 120 degrees\n-   move forward"
    },
    "function_definitions": {
      "booster": {
        "name": "booster"
      }
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/9/levels/7": {
    "dsls": {
      "description": "Great work so far! Choose your next activity. Complete as many as you can. Keep practicing with loops and the Artist!",
      "display_name": "Artist Practice"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/10/levels/1": {
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The artist will draw a triangle with 50 pixel sides.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The artist will draw a 50-sided polygon with 3 pixel sides.",
              "correct": false,
              "feedback": "Incorrect. The variable `length` would need to be in the `repeat` loop for that to happen."
            },
            {
              "text": "The artist will draw three open sides with 50 degree turns.",
              "correct": false,
              "feedback": "Incorrect.  The `length` variable would need to be used in the `turn` block for that to happen."
            },
            {
              "text": "The computer will prompt the user for a number.",
              "correct": false,
              "feedback": "The `length` variable is set to 50 and is being used in the `move forward by` block, so the artist will draw a triangle with 50 pixel sides."
            }
          ],
          "questions": [
            {
              "text": "We have set the variable \"length\" to 50. What will happen when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursef-2021/lessons/10/levels/3": {
    "short_instructions": "Draw a triangle with 150 pixels sides. ",
    "long_instructions": "Let's start this section by drawing a triangle with 150 pixel sides. \n\nBe sure to use the `length` variable and a repeat loop.",
    "authored_hints": {
      "courseF_artist_variables7_a": "Start your code by using the `set length` block. Set the length variable to 150.",
      "courseF_artist_variables7_b": "You can use a `repeat` loop to make your code for the triangle simpler.",
      "courseF_artist_variables7_c": "You will want to turn left 120 degrees to make the corners of the triangle."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/10/levels/4": {
    "short_instructions": "Rebuild the triangle code from the last puzzle, but this time use the `set length to` block to reset the `length` variable to `length`+10 at the end of each loop iteration.",
    "long_instructions": "Rebuild the triangle code from the last puzzle, but this time also add a new block to add 10 to `length` each time the loop finishes.\n\n[blockly block][0]\n\nThe length of the first side of the triangle is 150 pixels.",
    "authored_hints": {
      "courseF_artist_variables8_b": "Remember to start your code for the triangle with the `set length` block, and start it at 150 pixels.",
      "courseF_artist_variables8_c": "Make sure to use the `repeat` loop to draw your triangle.",
      "courseF_artist_variables8_a": "Try putting the \n\n[blockly block][0]\n\nblock inside your loop at the end."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/10/levels/5": {
    "short_instructions": "See what happens when you repeat the code from the last puzzle 30 times instead of only 3!  Feel free to make your lines any color or pattern for some extra zest.",
    "long_instructions": "Time to make some art!  \n\nSee what happens when you repeat the code from the last puzzle **30** times instead of only 3!\n\nFeel free to make your lines any color or pattern for some extra zest.",
    "authored_hints": {
      "courseF_artist_variables9_a": "For this puzzle, all you need to do is change how many times the loop repeats.",
      "courseF_artist_variables9_b": "Make sure the block that changes `length` are within your loop so the lines keep getting longer."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/10/levels/6": {
    "short_instructions": "Here's your code from the last puzzle.  Try editing the variable in other ways.  ",
    "long_instructions": "Here's your code from the last puzzle.  Try editing the variable in other ways.  \n\n-   What happens if you start out with `length` less than 150? \n-   What happens if you change `length` by a number greater or less than 10?\n-   What happens if you turn by 119 or 121 degrees?",
    "authored_hints": {
      "courseF_artist_variables10_a": "Have fun with this level! See what little changes can do to your code.",
      "courseF_artist_variables10_b": "You can try multiple things, and run your code multiple times."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/10/levels/7": {
    "short_instructions": "**Freeplay:** Take what you've learned and make your own drawing. ",
    "long_instructions": "**Freeplay:** Take what you've learned and make your own drawing. \n\nHow can you use variables with squares, pentagons, or hexagons?",
    "teacher_markdown": "This level is a “free play”. These levels have some characteristics you may want to explore before starting. \n\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have created something they like. There is no one right answer! \n-   Example solutions are available for this level which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "polygon_table": "Want to try other polygons? \n\nUse the number of sides in your `repeat` and the angle in your `turn` block.\nTry these:\n\n|   Shape  | Sides | Angle |\n| :------: | :---: | :---: |\n| triangle |   3   |  120° |\n|  square  |   4   |  90°  |\n| pentagon |   5   |  72°  |\n|  hexagon |   6   |  60°  |\n|  octagon |   8   |  45°  |\n|  nonagon |   9   |  40°  |\n|  decagon |   10  |  36°  |"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/11/levels/1": {
    "short_instructions": "Help the bee collect all of the nectar.",
    "long_instructions": "_\"This is going to **BEE** great!\"_\n\nHelp the bee collect all of the nectar.",
    "authored_hints": {
      "courseD_bee_nestedLoops1_a": "Not working?  Try using the \"Step\" button to see what happens line by line.",
      "courseD_bee_nestedLoops1_c": "Remember to use the `get nectar` block once you are on a square with a flower."
    },
    "callouts": {
      "stepButton": "Try stepping through your code one block at a time."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/11/levels/2": {
    "short_instructions": "Use a `repeat` loop to collect all of the nectar.",
    "long_instructions": "Use a `repeat` loop to collect all of the nectar."
  },
  "https://studio.code.org/s/coursef-2021/lessons/11/levels/3": {
    "short_instructions": "That flower looks tasty! \n\nFix the error(s) to collect all of the nectar.  You can now use both run and step.",
    "long_instructions": "That flower looks tasty! \n\nNow use the `repeat` block to move quickly to the flower and get the nectar."
  },
  "https://studio.code.org/s/coursef-2021/lessons/11/levels/4": {
    "short_instructions": "Help the bee collect all of the nectar.",
    "long_instructions": "Help the bee collect all of the nectar.",
    "authored_hints": {
      "courseD_bee_nestedLoops1_a": "Not working?  Try using the \"Step\" button to see what happens line by line.",
      "courseD_bee_nestedLoops1_b": "Try writing code for one side of the square first. Can you loop this to get all of the nectar?",
      "courseD_bee_nestedLoops1_c": "Remember to use the `get nectar` block once you are on a square with a flower."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/11/levels/5": {
    "dsls": {
      "description": "Great work so far! Choose your next activity. Complete as many as you can. Keep practicing with loops and the bee!",
      "display_name": "Bee Practice"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/12/levels/1": {
    "short_instructions": "Collect all honey and make all the nectar!",
    "long_instructions": "Collect all honey and make all the nectar!"
  },
  "https://studio.code.org/s/coursef-2021/lessons/12/levels/2": {
    "short_instructions": "Finish this code so that the bee can collect all of the honey and nectar.",
    "callouts": {
      "courseF_bee_functions_1_2018_1": "You can find your variables under here!"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/12/levels/3": {
    "short_instructions": "Change the starting value of the variable so that the bee can collect all of the honey and nectar.",
    "long_instructions": "Change the starting value of the variable so that the bee can collect all of the honey and nectar."
  },
  "https://studio.code.org/s/coursef-2021/lessons/12/levels/4": {
    "short_instructions": "Change the variable by 1 at the end of the loop.",
    "long_instructions": "In this puzzle, each patch is one space further away, and has one more nectar to get one more honey to make. Add 1 to the variable each time you go through the loop.",
    "authored_hints": {
      "courseF_bee_variables_3_2021_1": "To add one to the variable, you can use this code in your program:\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/12/levels/5": {
    "short_instructions": "Add one to the number of times the loop repeats.",
    "long_instructions": "This puzzle follows the same pattern, but it is extended to a fourth path. Add one to the number of times the main loop repeats to continue the pattern.",
    "authored_hints": {
      "courseF_bee_variables_3_2021_1": "To continue the pattern, increase the number of repeats:\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/12/levels/6": {
    "short_instructions": "Edit the code to work for this puzzle.",
    "long_instructions": "_What's different this time?_\n\nIn the last couple puzzles, we needed to change the variable by one for each new patch. This time, each patch has is two spaces further, and has two more nectar and two more honey to make.",
    "authored_hints": {
      "courseF_bee_variables_4_2021_1": "Instead of adding 1  to the variable, add 2 each time instead."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/12/levels/7": {
    "short_instructions": "Finish the code to solve this puzzle.",
    "long_instructions": "Finish the code to solve this puzzle.\n\n-   What should the value of the variable be at the start?\n-   How many times should you go through the main loop?\n-   How much should you change the variable by each time?"
  },
  "https://studio.code.org/s/coursef-2021/lessons/12/levels/8": {
    "dsls": {
      "description": "Great work so far! Choose your next activity. Complete as many as you can. Keep practicing with variables and the bee!",
      "display_name": "Bee Practice"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/13/levels/1": {
    "dsls": {
      "markdown": "# For Loop Fun\n\nWe know that loops allow us to do things over and over again, but now we're going to learn how to use loops with extra structure built right in.\n"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/14/levels/1": {
    "short_instructions": "Collect the nectar from each flower using the fewest blocks possible.",
    "authored_hints": {
      "courseF_bee_for1_b": "You will need two blocks in your ‘repeat’ loop to collect all of the nectar."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/14/levels/2": {
    "short_instructions": "Write the code to help the bee collect all of the nectar.",
    "long_instructions": "Write the code to help the bee collect all of the nectar.\n\nYou will need lots of blocks for this challenge, but we'll learn an easier way in the next puzzle.",
    "authored_hints": {
      "courseF_bee_for2_a": "If you’re confused, work one flower at a time, and test often.",
      "courseF_bee_for2_b": "Remember to move forward between each loop, so you reach each flower."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/14/levels/3": {
    "short_instructions": "Write the code to help the bee collect all of the nectar.",
    "long_instructions": "Here is a new way to write the same code. This code uses a \"for loop\". Look closely and see if you can figure out how it is similar or different to the code you wrote before. You can even swap out the new code below or the old code - it works exactly the same way!"
  },
  "https://studio.code.org/s/coursef-2021/lessons/14/levels/5": {
    "contained levels": [
      {
        "dsls": {
          "answers": [
            {
              "text": "The bee will move forward and collect all of the nectar from every flower. ",
              "correct": false,
              "feedback": "Incorrect. The `for` loop will let the bee collect the right amount of nectar, but it is only set to reach 4 flowers."
            },
            {
              "text": "The bee will move forward and collect all of the nectar from every flower, except for one.",
              "correct": true,
              "feedback": "Correct!"
            },
            {
              "text": "The bee will move forward and collect one nectar from each flower. ",
              "correct": false,
              "feedback": "Incorrect. The `for` loop will let the bee collect the right amount of nectar, but it is only set to reach 4 flowers."
            },
            {
              "text": "The bee will move forward and collect one nectar from flowers number 1 and 4. ",
              "correct": false,
              "feedback": "Incorrect. The `for` loop will let the bee collect the right amount of nectar, but it is only set to reach 4 flowers."
            }
          ],
          "markdown": "Ah!  The use of `for` loops makes this puzzle a lot easier!\n\n\n",
          "questions": [
            {
              "text": "Read the code below. What will happen when you click \"Run\"?"
            }
          ]
        }
      }
    ]
  },
  "https://studio.code.org/s/coursef-2021/lessons/14/levels/6": {
    "short_instructions": "Help the bee collect all of the nectar.",
    "authored_hints": {
      "courseF_bee_for4_a": "Use a `for` loop that goes from 1 to 7 with an increment of 1 to solve this puzzle.",
      "courseF_bee_for4_b": "Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.",
      "courseF_bee_for4_c": "Make sure to use the `counter` variable inside your nested `repeat` loop to get enough nectar!"
    },
    "callouts": {
      "courseF_bee_for4_1": "You will find the `for` loop in here!"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/14/levels/7": {
    "short_instructions": "Try gathering this nectar by counting down from 5 to 1 by 1.",
    "long_instructions": "You can also use a `for` loop to count down. \n\nTry gathering this nectar by counting down from **5** to **1** by **1**.",
    "authored_hints": {
      "courseF_bee_for6_a": "Don't forget to use a `counter` variable inside your `repeat` loop.",
      "courseF_bee_for6_b": "Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.",
      "courseF_bee_for6_c": "Your loop should count **from 5 to 1**."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/14/levels/8": {
    "short_instructions": "Try collecting these flowers using an increment of 2.",
    "long_instructions": "The last number in your `for` loop is called the **\"increment\"**.  Each time the loop is run, the counter variable changes by the value of the **increment**.\n\nTry collecting these flowers using an **increment** of 2.",
    "authored_hints": {
      "courseF_bee_for7_a": "Your `for` loop will need to count from 1 to 7 by 2.",
      "courseF_bee_for7_b": "Within your `for` loop, you will want to have a `move forward` command, and a loop to collect nectar.",
      "courseF_bee_for7_c": "Remember to use the `counter` variable in your `repeat` loop."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/14/levels/9": {
    "dsls": {
      "description": "Great work so far! Choose your next activity. Complete as many as you can. Keep practicing with for loops and the bee!",
      "display_name": "Bee Practice"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/14/extras?level_name=courseF_bee_for_challenge1_2021": {
    "short_instructions": "Use this `for loop` to collect all of the nectar. ",
    "long_instructions": "You can use this `for loop` to collect all of the nectar. Un-bee-lievable!\n\nThere are a few actions that you will want to `repeat 'counter' times`.",
    "function_definitions": {
      "move and get nectar with counter": {
        "name": "move and get nectar with counter"
      }
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/14/extras?level_name=courseF_bee_for_challenge2_2021": {
    "short_instructions": "Solve this puzzle using the fewest number of blocks possible.",
    "long_instructions": "Solve this puzzle with the fewest number of blocks possible.",
    "authored_hints": {
      "courseF_bee_for_challenge2_a": "Take a look at this option for movement:  \n\n[][0]",
      "courseF_bee_for_challenge2_b": "Try using two `for` loops: One for climbing up and grabbing nectar, and the other for climbing down and making honey.",
      "courseF_bee_for_challenge2_c": "Notice that one `for` loop needs several regular loops inside that repeat `counter` times to make the increasing stair pattern. \n\nThe other `for` loop only needs one regular loop to make `counter` amount of honey.",
      "courseF_bee_for_challenge2_d": "**Solution:**\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/15/levels/2": {
    "display_name": "For Loops Freeplay (Beginning)",
    "short_instructions": "Experiment with the `for` loop and play with the `counter` variable.",
    "long_instructions": "**Free Play:** Experiment with the `for` loop and the `counter` variable.  \n\nDrag out a few blocks and see what happens.  ",
    "authored_hints": {
      "courseF_artist_for1_a": "Can you draw something like this:\n\n[][0]"
    },
    "callouts": {
      "courseF_artist_for1_1": "The toolbox is in \"category\" mode to make more room for your code.  The `for` loops live in here."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/15/levels/3": {
    "short_instructions": "Add two blocks to create the spiral.",
    "long_instructions": "For loops are great for creating spirals with the artist. Let's try one now!\n\n## Do This\n\n-   Add a block to move forward - using the `counter` variable.\n-   Add a turn block."
  },
  "https://studio.code.org/s/coursef-2021/lessons/15/levels/4": {
    "short_instructions": "Recreate your code from the last level, but turn 89 degrees to create this twisted square spiral.",
    "long_instructions": "If you turn a little bit more or less than you normally would for a shape, it creates a neat effect.\n\nRecreate your code from the last level, but turn 89 degrees to create this twisted square spiral.",
    "authored_hints": {
      "courseF_artist_for6_a": "Your `for` loop will count from 15 to 300 by 15.",
      "courseF_artist_for6_b": "Put a `move forward` and a `turn` block within this `for` loop.",
      "courseF_artist_for6_c": "All you have to change is the number of degrees in the `turn` block."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/15/levels/5": {
    "short_instructions": "Make three small changes to the code from the last level to get this!",
    "long_instructions": "Make three small changes to the code from the last level to get this!  ",
    "authored_hints": {
      "courseF_artist_for7_a": "The pen is thinner in this puzzle. You will need to set it to `1` before you start.",
      "courseF_artist_for7_b": "Notice that this spiral turns right instead of left!",
      "courseF_artist_for7_c": "The `for` loop in this puzzle goes from 15 to 300 by 2.",
      "courseF_artist_for7_d": "This image is made by turning just 89 degrees."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/15/levels/6": {
    "short_instructions": "Take the angle down to 72 degrees to get a spiraled pentagon.",
    "authored_hints": {
      "courseF_artist_for8_a": "Keep everything else the same in your code, only the turn angle needs to change.",
      "courseF_artist_for8_b": "If you want, you can choose a different color for your spiral!"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/15/levels/7": {
    "short_instructions": "**Inspiration:**  Use the counter inside the `set alpha` block to get this faded center.",
    "long_instructions": "**Inspiration:** Use the counter inside the `set alpha` block to get something like this faded center.\\\n(This hexagon pattern was made using a 60 degree turn.)",
    "authored_hints": {
      "courseF_artist_for9_a": "If you put the `set alpha` block inside of your `for` loop, and use the `counter` variable to change it, you can create a design like this.",
      "courseF_artist_for9_b": "The `set alpha` block changes the opacity of a color. The smaller the value, the more transparent the color is."
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/15/levels/8": {
    "short_instructions": "Free Play: Try using the `counter` variable with other drawing elements to make magical images like this one.",
    "long_instructions": "**Free Play:** Try using the `counter` variable with other drawing elements to make magical images like this one.\n\n[][0]",
    "teacher_markdown": "This level is a “free play”. These levels have some characteristics you may want to explore before starting. \n\n-   These levels are **not checked for correctness** to allow for more open-ended creativity. Empower your students to determine for themselves when they have created something they like. There is no one right answer! \n-   Example solutions are available for this level which can be viewed by opening the teacher panel to the right.",
    "authored_hints": {
      "courseF_artist_for10_a": "The image in the drawing was made using a counter for the `set alpha` and `counter` / 10 as a brush size.",
      "courseF_artist_for10_b": "The image in the drawing uses a turn of 61 degrees.",
      "courseF_artist_for10_c": "Want to know how the sample image was done?\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/15/extras?level_name=courseF_artist_for_challenge1_2021": {
    "short_instructions": "Can you figure out how to re-create this drawing?",
    "long_instructions": "Can you figure out how to re-create this drawing? \n\n<img src=\"https://images.code.org/724b2efa8aefe863bd0d6491a3f1590f-image-1445563707400.26.50.png\" width=\"350px\"/>",
    "authored_hints": {
      "courseF_artist_for_challenge1_a": "The `pen width` is 1. The first square has 50 pixel sides, and each square is 50 pixels wider than the last.",
      "courseF_artist_for_challenge1_b": "The opacity on the brush is always `counter`/2.",
      "courseF_artist_for_challenge1_c": "After you make each square, don't forget to jump backward, turn, jump again, then turn back!",
      "courseF_artist_for_challenge1_d": "**Solution:**\n\n[blockly block][0]"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/15/extras?level_name=courseF_artist_for_challenge2_2021": {
    "short_instructions": "Can you figure out how to re-create this drawing with a single loop?",
    "long_instructions": "Can you figure out how to re-create this drawing with a single loop? \n\n<img src=\"https://images.code.org/b0d15d06465d645c5ca533e5da6387b3-image-1446075597132.36.04.png\" width=\"350px\"/>",
    "authored_hints": {
      "courseF_artist_for_challenge2_c": "The `for loop` goes from 5 to 250 by 2. ",
      "courseF_artist_for_challenge2_a": "The color change happens using the `set color with red, green, blue` block.  Red is set constant at 255, green is always the value of `counter`, and blue is always `255 - counter`.",
      "courseF_artist_for_challenge2_b": "The code for this is simpler than you might think.  Just set the color inside the for loop, move forward, then turn.",
      "courseF_artist_for_challenge2_d": "**Solution:**\n\n[blockly block][0]\n\n[][1]"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/16/levels/1": {
    "long_instructions": "# Collecting Data\n\nRun this simulation 5 times. Each time, use the Collecting Data activity guide to record:\n\n-   How many apples did the elephant collect?\n-   How many apples did the hippo collect?\n-   How much time did it take for all of the apples to be collected?"
  },
  "https://studio.code.org/s/coursef-2021/lessons/16/levels/2": {
    "long_instructions": "# Modify and Predict\n\nPick one of the variables that control this simulation to modify and predict how that will change the outcome.\n\nAfter you have written down your prediction, run the simulation 5 times and write down your findings. Was your prediction accurate?"
  },
  "https://studio.code.org/s/coursef-2021/lessons/16/levels/3": {
    "short_instructions": "Try making some changes to the sprite costumes or the code below. ",
    "long_instructions": "# Customize\n\nHere is another version of the simulation. Try making some changes to the sprite costumes or the code below. Have fun customizing your own simulation!",
    "behavior_names": {
      "wandering": "wandering",
      "patrolling": "patrolling",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "moving with arrow keys": "moving with arrow keys",
      "driving with arrow keys": "driving with arrow keys",
      "fluttering": "fluttering",
      "wobbling": "wobbling",
      "moving west and looping": "moving west and looping",
      "moving east and looping": "moving east and looping"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/17/levels/1": {
    "dsls": {
      "content1": "description here",
      "markdown": "# Outbreak: Code Your Own Simulation\n\n## Welcome to Monster Town!\nMonster Town was usually a happy and healthy place. The monsters of Monster town loved to wander around to visit their friends. \n\n<img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\">\n\nOne day, one of the monsters started feeling sick. The monster had caught a **virus**! A virus is a tiny germ that can make you sick. The other monsters were not too worried. They kept visiting their friends.\n\n<img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\">\n\nSoon after, two more monsters got sick. It was the same virus! It seems they got the virus from their friend.\n\n<img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png\" style=\"width:8%\"> <img src=\"https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png\" style=\"width:8%\"> <img src=\"https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\">\n\nThe virus slowly spread to other monsters who were nearby. The healthy monsters began to worry that they were all going to get sick. The sick monsters began to worry that they were going to give the virus to everyone else.\n\n<img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png\" style=\"width:8%\"> <img src=\"https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png\" style=\"width:8%\"> <img src=\"https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png\" style=\"width:8%\"> <img src=\"https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png\" style=\"width:8%\"> <img src=\"https://images.code.org/f30010a430a4189a734467094842b39d-image-1603134238257.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\"> <img src=\"https://images.code.org/3b55881f776348c6eb32379e4cbd34e1-image-1603133896503.png\" style=\"width:8%\">\n\n\n<div style=\"display: inline-block\">\n<img src=\"https://images.code.org/89376b9ebd5fcee77545f13a7a444430-image-1603135356392.png\" style=\"float:right; width:30%\">\n\n## Stopping the spread\nFortunately, after studying the virus, the neighbors of Monster Town made an important discovery. They realized that they were less likely to spread the virus if they wore masks over their mouths. With face masks on, sick monsters were less likely to give the virus to healthy monsters.\n\n<img src=\"https://images.code.org/c98f28f9bf6a027143592109d59ee484-image-1603134766360.png\" style=\"width:8%\"> <img src=\"https://images.code.org/bac9dbfaf1815c6627fc24e8e6db396d-image-1603134760456.png\" style=\"width:8%\">\n\n</div>\n\n<img src=\"https://images.code.org/ef7499758496b39bcccc24aabd2af5d7-image-1603137920037.2020-10-19 16_04_58.gif\" style=\"float:left; width:25%; padding-right:25px\">\n\n## What will happen next?\n\nToday, you're going to write code to create and run your own **simulation** of the virus outbreak at Monster Town.  A simulation is a computer model of a process or system. Learn to code and make predictions about what will happen to the neighbors of Monster Town.\n\n<img src=\"https://images.code.org/fcbfd250d58652bdfd6393ec4f2fe2dd-image-1603134705074.png\" style=\"float:right; width:15%\">\n\n* *How quickly will the virus spread?*\n\n* *Will everyone get sick?*\n\n* *How will face masks help?*\n\n\nWhen you're finished, share your simulation with others. Share your message about what you think we can do to help keep others healthy when a virus comes to town. \n"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/17/levels/2": {
    "display_name": "How to Make a Sprite"
  },
  "https://studio.code.org/s/coursef-2021/lessons/17/levels/3": {
    "display_name": "Virus Simulation",
    "short_instructions": "Create 10 healthy sprites and 1 sick sprite. Change their size and make them wander.",
    "long_instructions": "# Creating a Simulation\n\n<img src=\"https://images.code.org/fa359041f9e1a3ed92d72f6b0b24a8a9-image-1602095737300.gif\" style=\"float:right; padding-left:10px\">\n\n<div style=\"display:inline\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" class=\"instructor-image\">\n\n_Today, you're going to write code so you can run your own simulation of the virus outbreak at Monster Town._\n\n_First, we will bring Monster Town to life by creating sprites to represent the monsters. Write your code in the_ **workspace,** _then press_ **Run** _to see your simulation. If you need any help, click the_ **lightbulb** _for a hint._\n\n</div>\n\n## Do This\n\n1.  Make sprites to represent 10 healthy monsters [][0] and 1 sick monster [][1]. **Sprites** are the characters on the screen that can move, change, or interact with each other.\n\n2.  Set the size of the sprites to `50`, and make them all begin `wandering`.\n\n3.  Press `RUN`.\n\nYou should see sprites moving around like the animation to the right.",
    "authored_hints": {
      "step1": "Use these blocks to create your sprites:\n\n[blockly block][0]\n\n[blockly block][1]\n\nThis block is found in the **Sprites** category of the toolbox.",
      "step2": "Change the size of the sprites with this block: [blockly block][0].\n\nIt is found in the **Actions** category of the toolbox.",
      "step3": "Make all sprite begin wandering with this: [blockly block][0].\n\nThis block is found in the **Actions** category of the toolbox."
    },
    "behavior_names": {
      "recovering": "recovering",
      "wandering": "wandering"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/17/levels/4": {
    "display_name": "Virus Simulation",
    "short_instructions": "Change healthy monsters into sick monsters when they touch.",
    "long_instructions": "# Programming with Events\n\n<div style=\"display:inline-block\">\n\n_<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" class=\"instructor-image\">\nUh oh! One of the monsters caught a virus! When a healthy monster touches a sick monster, it becomes sick too._ \n\n</div>\n\nTo make something happen when two sprites touch, we will use this \"event\" block:\n\n[blockly block][0]\n\nNotice that you can open this block with the blue `+` on the left side. \n\n## Do This\n\nUse the `subject` block inside to change **healthy monsters**  [][1] into **sick monsters** [][2] when they touch.",
    "authored_hints": {
      "hint1": "Click the `+` button on the event block. Fill the empty spot in the `change costume` block with the `subject` block found inside.\n\n[blockly block][0]"
    },
    "callouts": {
      "minitoolbox": "Click here to expand the block.",
      "pointerlocation": "Drag a subject block here."
    },
    "behavior_names": {
      "recovering": "recovering",
      "wandering": "wandering"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/17/levels/5": {
    "display_name": "Virus Simulation",
    "short_instructions": "Change monsters into monsters with face masks when you click them.",
    "long_instructions": "<img src=\"https://images.code.org/a157874032e8f71cf921ba32f082e5b4-image-1602518140122.2020-10-12 11_55_12.gif\" style=\"float:right; padding:10px\">\n\n# Stopping the Outbreak with Masks\n\n_<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" class=\"instructor-image\">One way to slow down an outbreak is to wear a mask. Monsters with face masks will be unable to get the virus or give it to others. To make something happen when a type of monster is clicked, you can use a new type of_ \"event\" _block._\n\n## Do This\n\n1.  Use a `when clicked` block with the `change costume` block to give healthy monsters a mask when they are clicked. Repeat this for sick monsters.\n\n2.  Press `Run` and begin rapidly clicking the monsters. Try to slow or stop the outbreak by putting a mask on all the monsters.",
    "authored_hints": {
      "hint1": "To give the monsters masks, use the `change costume` block with a `when clicked` event:\n\n[blockly block][0]\n\nBe sure to drag in the small red `clicked` block as well!",
      "hint2": "The new code for this level should look like this:\n\n[blockly block][0]"
    },
    "behavior_names": {
      "recovering": "recovering",
      "wandering": "wandering"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/17/levels/6": {
    "display_name": "Modify Your Simulation",
    "bubble_choice_description": "Change how the simulation works and make a prediction about what will happen.",
    "short_instructions": "Change the number and size of monster sprites for your simulation.",
    "long_instructions": "<img src=\"https://images.code.org/d228e4b5feb602025d5f7b5145dbece9-image-1603143852671.gif\" width=\"250\" style=\"float:right; padding-left:10px\">\n\n# More monsters\n\n_<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" class=\"instructor-image\">New monsters are moving into Monster Town! What will this mean for the outbreak? Let's use the simulation to make predictions._ \n\n## Do This\n\n1.  Change the number of monster sprites you make by editing this block: \n    [blockly block][0]\n\n2.  Change the size of the sprites by editing this block: \n    [blockly block][1]\n\n3.  Run the new simulation 3-5 times.\n\n_Did anything happen differently?_",
    "authored_hints": {
      "challenge": "## Looking for an extra challenge?\n\nYou can also make the monsters move faster or slower.\n\n1.  Click `Edit` in this block [blockly block][0] \n2.  Increase or decrease the number in this block: \n\n[blockly block][1]\n\nTo make the monsters move slower, choose a decimal number like `0.5` or `0.25`. To make them move faster, choose any number greater than 1."
    },
    "behavior_names": {
      "recovering": "recovering",
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "swimming left and right": "swimming left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling",
      "moving with arrow keys": "moving with arrow keys"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/17/levels/7": {
    "dsls": {
      "content1": "description here",
      "markdown": "# Outbreak: Thinking Like a Scientist\n\n<img src=\"https://images.code.org/89376b9ebd5fcee77545f13a7a444430-image-1603135356392.png\" style=\"float:right; width:30%\">\n\nSimulations are a great way to learn things that can be hard to observe in the real world. They help scientists solve problems and test new ideas safely and efficiently. Your simulation is a way to show how a virus outbreak in Monster Town might look.\n\n## Reset and Replay!\nEven when you write the code yourself, it's impossible to know exactly what will happen when you press run. The monsters wander randomly, so you don't know if the virus will spread fast or slow. Whenever you change your code, make sure to run your simulation more than once. Things won't happen the same way twice!\n\n## Collecting Data\nTry writing down your observations as you run your simulation. You can count the number of monsters that get sick or use a timer to see how fast things happen. For example, how long does it usually take for all monsters to get sick if none have masks? \n\n## Making Predictions\nIf you understand your model, you can use it to make predictions. You can even change how your simulation runs and guess what will happen differently. For example:\n* What would happen if there were twice as many monsters?\n* What would happen if the monsters moved at half the speed?\n\n<img src=\"https://images.code.org/2e83373ffd346ce3f42917a0624d441c-image-1603749526420.png\" style=\"float:right\">\n\n## Is Monster Town like the real world?\nThere is a limit to how realistic any model can get. \n* What does your outbreak simulation have in common with real world virus outbreaks?\n* What are the differences?\nWhen you finish this activity, discuss these questions with teachers or your family!\n\n## What else can we model?\nYou have already created a working model of the outbreak at Monster Town. What are the things your simulation can't do or show that you wish it could? Press continue to keep going and learn to model even more:\n* Increasing the number of monsters in the simulation\n* Helping monsters recover from the virus\n* Probability, immunity, vaccines, and more!\n\nYou can also share your simulation model with others, or share a message about what you think we can do to help keep others healthy when a virus comes to town. \n"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/17/levels/8": {
    "display_name": "Recovery",
    "bubble_choice_description": "Help your sprites get better automatically over time!",
    "short_instructions": "All the sick monsters now begin recovering automatically.",
    "long_instructions": "# Recovery\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/d5106949cd1e458d16b10c2b44c58a8b-image-1618928095586.gif\" class=\"instructor-image\">\n\n_Good news: Monsters can now start to feel better on their own! Sick monsters that begin recovering will automatically change back to a healthy monster after some time passes. How do you think this will affect the outbreak?_\n\n</div>\n\n## Do This\n\nRun the simulation a few more times. Did anything happen differently?",
    "behavior_names": {
      "recovering": "recovering",
      "wandering": "wandering"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/17/levels/9": {
    "display_name": "Random Chance",
    "bubble_choice_description": "A virus isn't always transmitted, and masks don't stop transmission perfectly either. Improve your simulation by making infections happen with a random chance.",
    "short_instructions": "Add a percent chance for monsters to get sick whenever healthy monsters touch sick monsters. Do this for all combinations of monsters with and without masks.",
    "long_instructions": "# Chance\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" class=\"instructor-image\">\n\n_Right now, it's impossible for monsters to give or get the virus if either of them is wearing a mask. This sounds great, but it's not really that simple. We should add a \"chance\" (or probability) for the virus to spread each time any two monsters touch. We can model the chance of getting the virus off of these notes._\n\n</div>\n\n<details open><summary><em><strong>Notes:</strong>How face masks affect the Monster Town outbreak</em></summary>\n\n<div class=\"container\" style=\"background-color:indianred; text-align:center; border-style: solid; width: 220px\">\n<img src=\"https://images.code.org/01291b1e958448f65abb46b0d135b916-image-1603206161098.png\" style=\"width:55%\">\n\n<div class=\"container\" style=\"background-color:white; text-align:center; border-style: solid; width: 190px\">\n<br>\n\n_Benefits of Face Masks_\n\n| Healthy |  Sick |     Chance    |\n| :-----: | :---: | :-----------: |\n|  [][0]  | [][1] | **Very High** |\n|  [][2]  | [][3] |    **High**   |\n|  [][4]  | [][5] |    **Low**    |\n|  [][6]  | [][7] |  **Very Low** |\n\n<br>\n</div>\n<br>\n</div>\n\n</details>\n\n## Do This\n\n1.  Add this **logic** block under the `when touches` event and set it to a very high chance:\n\n[blockly block][8]\n\n2.  Add more events that include monsters wearing masks and give each a different percent chance (probability). Click the lightbulb for a hint if you are not sure which events are needed.\n\n3.  Press **Finish** when you are ready to move on.",
    "authored_hints": {
      "hint2": "Be sure to move the other \"action\" blocks to the inside of the `if chance` block:\n\n[blockly block][0]",
      "hint1": "You will need to add 3 more `when touches` events to check for all possible combinations of `touches` between healthy and infected sprites.\n\n[blockly block][0]"
    },
    "behavior_names": {
      "recovering": "recovering",
      "wandering": "wandering"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/17/levels/10": {
    "display_name": "Immunity and Vaccines",
    "bubble_choice_description": "Prevent your sprites from ever getting sick by giving them immunity.",
    "short_instructions": "Create a new costume for monsters with immunity to the virus and use it in your simulation.",
    "long_instructions": "# Vaccines\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" class=\"instructor-image\">\n\n_Vaccines can protect monsters from getting a virus. These monsters will not get sick at all!_\n\n</div>\n\nNext, you will create a new sprite costume to represent monsters who got a vaccine.\n\n<details><summary><strong>Learn how to modify a sprite costume.</strong></summary>\n\n|                                       | To modify a costume:                                                                                                                                                                                                                    |\n| ------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [expandable][0] <br/> (Click to view) | 1. Change to the Costumes tab in the top left corner. <br/> 2. Duplicate one of the existing costumes. <br/> 3. Choose a primary color for drawing.  <br/> 4. Click the Paint bucket tool, then click the monster's body to recolor it. |\n\n</details>\n\nOnce the new costume is ready, find a way to work it into your program. For example, you can change masked monsters into vaccinated monsters when they are clicked.",
    "authored_hints": {
      "whenclicked": "## Vaccines\n\nYou can simulate giving monsters a vaccine when you click on them. To do this, use the `change costume` block with this event:\n\n[blockly block][0]",
      "verionhistory": "Feeling stuck? You can always reset your code by clicking `Version History` below then choosing to \"Start Over\"."
    },
    "callouts": {
      "costumes_callout": "Click to make a new costume"
    },
    "behavior_names": {
      "recovering": "recovering",
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving left and right": "moving left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling",
      "moving with arrow keys": "moving with arrow keys"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/17/levels/11": {
    "display_name": "Share a Message",
    "bubble_choice_description": "Use your project to share a message. What do you want others to learn from this?",
    "short_instructions": "Share a message with your simulation.",
    "long_instructions": "# Share your message!\n\n<div style=\"display:inline-block\">\n<img src=\"https://images.code.org/2d62fa7907c5e01d9e8cb5fadb84cc2f-image-1603199837041.png\" class=\"instructor-image\">\n\n_You can share your creation - and your message - with the world! What have you learned from this activity? What do you hope others will learn?_\n\n</div>\n\nThe [blockly block][0] block displays text on the screen while your simulation runs. Use it to tell the user how your simulation works or to share a message.\n\nHere are some examples:\n\n[blockly block][1]\n\n[blockly block][2]",
    "placeholder_texts": {
      "fac94901e68fc1dea6e749c012e3efc0": "Click the sprites to give them masks.",
      "968c8b54671ab303d48320f86937c40b": "Masks help slow the spread of viruses!"
    },
    "behavior_names": {
      "recovering": "recovering",
      "wandering": "wandering",
      "moving east": "moving east",
      "spinning left": "spinning left",
      "spinning right": "spinning right",
      "shrinking": "shrinking",
      "growing": "growing",
      "moving south": "moving south",
      "moving left and right": "moving left and right",
      "moving north": "moving north",
      "jittering": "jittering",
      "moving west": "moving west",
      "patrolling": "patrolling",
      "moving with arrow keys": "moving with arrow keys"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/18/levels/1": {
    "display_name": "Video: Machine Learning"
  },
  "https://studio.code.org/s/coursef-2021/lessons/18/levels/5": {
    "display_name": "Video: Training Data"
  },
  "https://studio.code.org/s/coursef-2021/lessons/18/levels/7": {
    "display_name": "Video: Societal Implications"
  },
  "https://studio.code.org/s/coursef-2021/lessons/19/levels/1": {
    "dsls": {
      "markdown": "# The Internet\n\nBuild your own Internet in the classroom just using pieces of paper.\n"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/20/levels/1": {
    "dsls": {
      "description": "You have reached the end of Course F! Choose a project to create.",
      "display_name": "End of Course Project"
    }
  },
  "https://studio.code.org/s/coursef-2021/lessons/20/levels/2": {
    "dsls": {
      "description": "You have reached the end of Course F! Choose a project to create.",
      "display_name": "End of Course Project"
    }
  }
}